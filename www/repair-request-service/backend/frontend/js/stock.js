document.addEventListener("DOMContentLoaded", async function () {
    const materialsTableBody = document.getElementById("materialsTableBody");
    const searchInput = document.getElementById("materialSearch");
    let materialsData = [];
    let currentMaterialId = null; // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ ID –º–∞—Ç–µ—Ä–∏–∞–ª–∞

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    async function loadMaterials() {
        try {
            const response = await fetch(`${window.config.apiUrl}/api/supplies/mol/–î—Ä–æ–∑–¥–æ–≤–∞ –¢–∞—Ç—å—è–Ω–∞ –í–∏–∫—Ç–æ—Ä–æ–≤–Ω–∞`, {
                headers: {
                    "Authorization": `Bearer ${localStorage.getItem('token')}`
                }
            });
            if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤");

            const data = await response.json();
            materialsData = data.map(item => ({
                id: item.–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞–ö–æ–¥,
                name: item.–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞,
                quantity: item.–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ || 0,
                imageUrl: `/images/${item.–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞–ö–æ–¥}.jpg` // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
            }));

            renderMaterials(materialsData); // –†–µ–Ω–¥–µ—Ä–∏–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
            showAlert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º.");
        }
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ç–∞–±–ª–∏—Ü—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    function renderMaterials(data) {
        materialsTableBody.innerHTML = ""; // –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º
        data.forEach(material => {
            const row = document.createElement("tr");

            row.innerHTML = `
        <td class="image-cell" style="position: relative;">
            <img src="${window.config.apiUrl}/images/${material.id}.jpg" 
                 alt="${material.name}" 
                 class="material-image"
                 onclick="openImageModal('${material.id}')"
                 onerror="this.onerror=null;this.src='${window.config.apiUrl}/images/default-material.jpg';">
            <button class="edit-image-btn" onclick="openEditModal('${material.id}')">
                üñäÔ∏è
            </button>
        </td>
        <td>${material.name}</td>
        <td>${material.quantity}</td>
        <td>
            <button class="btn btn-info btn-sm me-2" onclick="openRequestsModal('${material.id}')">–ó–∞—è–≤–∫–∏</button>
            <button class="btn btn-success btn-sm" onclick="openIssueModal('${material.id}')">–í—ã–¥–∞—á–∞</button>
        </td>
        `;
            materialsTableBody.appendChild(row);
        });
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    searchInput.addEventListener("input", () => {
        const query = searchInput.value.toLowerCase();
        const filteredMaterials = materialsData.filter(material =>
            material.name.toLowerCase().includes(query)
        );
        renderMaterials(filteredMaterials); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
    });

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞—è–≤–æ–∫
    window.openRequestsModal = async function (nomenclatureCode) {
        const requestsList = document.getElementById("requestsList");
        requestsList.innerHTML = "–ó–∞–≥—Ä—É–∑–∫–∞...";
        try {
            const response = await fetch(`${window.config.apiUrl}/api/supplies/nomenclatureCode/${nomenclatureCode}`, {
                headers: {
                    "Authorization": `Bearer ${localStorage.getItem('token')}`
                }
            });
            if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫");

            const requests = await response.json();
            if (requests.length === 0) {
                requestsList.innerHTML = "–ó–∞—è–≤–∫–∏ —Å —ç—Ç–∏–º —Ä–∞—Å—Ö–æ–¥–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.";
                return;
            }

            // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞—è–≤–æ–∫ –ø–æ –¥–∞—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
            requests.sort((a, b) => new Date(b.dateOfUse) - new Date(a.dateOfUse));

            // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
            const table = document.createElement("table");
            table.className = "table table-bordered table-hover";

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã—Ö –≥—Ä–∞–Ω–∏—Ü
            table.style.borderCollapse = "collapse";
            table.style.borderWidth = "1px 0"; // –¢–æ–ª—å–∫–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã

            // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
            const thead = document.createElement("thead");
            thead.innerHTML = `
        <tr>
            <th>–ì–¥–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ—Å—å</th>
            <th>–î–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</th>
            <th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th>
            <th>–î–µ–π—Å—Ç–≤–∏–µ</th>
        </tr>
    `;
            table.appendChild(thead);

            // –°–æ–∑–¥–∞–µ–º —Ç–µ–ª–æ —Ç–∞–±–ª–∏—Ü—ã
            const tbody = document.createElement("tbody");

            requests.forEach(request => {
                const row = document.createElement("tr");
                row.innerHTML = `
<!--            <td>#${request.ticketNumber}</td>-->
            <td>${request.ticketNumber ? request.inventoryNumber + ' (#' + request.ticketNumber +')' : request.molName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</td>
            <td>${new Date(request.dateOfUse).toLocaleString()}</td>
            <td>${request.quantity} —à—Ç.</td>
            <td>
                <button class="btn btn-primary btn-sm" onclick="openModal('${request.ticketNumber}')">
                    –û—Ç–∫—Ä—ã—Ç—å
                </button>
            </td>
        `;
                tbody.appendChild(row);
            });
            table.appendChild(tbody);

            // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
            requestsList.innerHTML = "";
            requestsList.appendChild(table);
        } catch (error) {
            requestsList.innerHTML = "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫";
            console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫:", error);
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const requestsModal = new bootstrap.Modal(document.getElementById("requestsModal"));
        requestsModal.show();
    };


    //–û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–µ–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–µ–¥–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    window.openEditModal = function(materialId) {
        currentMaterialId = materialId; // –°–æ—Ö—Ä–∞–Ω—è–µ–º id –º–∞—Ç–µ—Ä–∏–∞–ª–∞
        document.getElementById('imageUrlInput').value = ''; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
        new bootstrap.Modal(document.getElementById('imageEditModal')).show();
    };

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
    window.openImageModal = function(imageId) {
        const modalImage = document.getElementById('modalImage');
        modalImage.src = `${window.config.apiUrl}/images/${imageId}.jpg`;
        const imageModal = new bootstrap.Modal(document.getElementById('imageModal'));
        imageModal.show();
    }

    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    window.saveImageUrl =  function()  {
        const newImageUrl = document.getElementById('imageUrlInput').value;

        if (!newImageUrl) {
            showAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!');
            return;
        }

        // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        const imageRequest = {
            nomenclatureCode: currentMaterialId,
            imageUrl: newImageUrl
        };

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        fetch(`${window.config.apiUrl}/api/supplies-image/update-supplies-images`, {
            method: 'POST',
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${localStorage.getItem('token')}`
            },
            body: JSON.stringify(imageRequest)
        })
            .then(response => response.text()) // –û–∂–∏–¥–∞–µ–º —Ç–µ–∫—Å—Ç –≤–º–µ—Å—Ç–æ JSON
            .then(message => {
                // –ù–∞–π—Ç–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                const modalElement = document.getElementById('imageModal');
                const modalInstance = bootstrap.Modal.getInstance(modalElement);

                if (modalInstance) {
                    modalInstance.hide(); // –ó–∞–∫—Ä—ã—Ç—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                }

                showAlert(message); // –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            })
            .catch(error => {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
                showAlert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ' + error.message);
            });
    }


    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –∑–∞—è–≤–∫–∏
    window.openIssueModal = function (nomenclatureCode) {
        const modal = new bootstrap.Modal(document.getElementById("suppliesModal"));
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        document.getElementById("nomenclatureCodeInventory").value = nomenclatureCode;
        document.getElementById("nomenclatureCodeMol").value = nomenclatureCode;

        modal.show();
    };
    window.showByInventoryForm = function () {
        document.getElementById("byInventoryForm").classList.remove("hidden");
        document.getElementById("byMolForm").classList.add("hidden");
    };

    window.showByMolForm = function () {
        document.getElementById("byMolForm").classList.remove("hidden");
        document.getElementById("byInventoryForm").classList.add("hidden");
    };

    function closeModal() {
        $('#suppliesModal').modal('hide');
    }

    //—Ñ—É–Ω–∫—Ü–∏—è –≤—ã–¥–∞—á–∏ –ø–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–Ω–æ–º—É –Ω–æ–º–µ—Ä—É
    window.submitByInventory=function() {
        const request = {
            inventoryNumber: document.getElementById("inventoryNumber").value,
            nomenclatureCode: document.getElementById("nomenclatureCodeInventory").value,
            comment: document.getElementById("commentInventory").value,
            quantity: parseInt(document.getElementById("quantityInventory").value, 10),
        };

        fetch(`${window.config.apiUrl}/api/SuppliesIssue/byInventory`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${localStorage.getItem('token')}`
            },
            body: JSON.stringify(request),
        })
            .then((response) => {
                if (!response.ok) {
                    return response.text().then((text) => { throw new Error(text); });
                }
                return response.json();
            })
            .then((data) => {
                showAlert(`–£—Å–ø–µ—Ö: ${data.message}`);
                closeModal();
            })
            .catch((error) => showAlert("–û—à–∏–±–∫–∞: " + error.message));
    }

    //—Ñ—É–Ω–∫—Ü–∏—è –≤—ã–¥–∞—á–∏ –ø–æ –ú–û–õ
    window. submitByMol=function() {
        const request = {
            molName: document.getElementById("molName").value,
            comment: document.getElementById("commentMol").value,
            nomenclatureCode: document.getElementById("nomenclatureCodeMol").value,
            quantity: parseInt(document.getElementById("quantityMol").value, 10),
        };

        fetch(`${window.config.apiUrl}/api/SuppliesIssue/byMol`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${localStorage.getItem('token')}`
            },
            body: JSON.stringify(request),
        })
            .then((response) => {
                if (!response.ok) {
                    return response.text().then((text) => { throw new Error(text); });
                }
                return response.json();
            })
            .then((data) => {
                showAlert(`–£—Å–ø–µ—Ö: ${data.message}`);
                closeModal();
            })
            .catch((error) => showAlert("–û—à–∏–±–∫–∞: " + error.message));

    }

    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –¥–∞—Ç–∞–º
    window.applyDateFilter = async function () {
        const startDate = document.getElementById("startDate").value;
        const endDate = document.getElementById("endDate").value;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã –¥–∞—Ç—ã –±—ã–ª–∏ –≤–∞–ª–∏–¥–Ω—ã–º–∏
        if (!startDate || !endDate) {
            showAlert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–±–µ –¥–∞—Ç—ã.");
            return;
        }

        // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –¥–∞—Ç–∞–º
        try {
            const response = await fetch(`${window.config.apiUrl}/api/supplies/filterByDate?startDate=${startDate}&endDate=${endDate}`, {
                headers: {
                    "Authorization": `Bearer ${localStorage.getItem('token')}`
                }
            });
            if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å—Ö–æ–¥–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤");

            const materials = await response.json();
            if (materials.length === 0) {
                document.getElementById("filteredMaterials").innerHTML = "–†–∞—Å—Ö–æ–¥–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∑–∞ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥.";
                return;
            }

            // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞—è–≤–æ–∫ –ø–æ –¥–∞—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
            materials.sort((a, b) => new Date(b.dateOfUse) - new Date(a.dateOfUse));

            // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å —Ä–∞—Å—Ö–æ–¥–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏
            const table = document.createElement("table");
            table.className = "table table-bordered table-hover";
            table.style.borderCollapse = "collapse";
            table.style.borderWidth = "1px 0";

            const thead = document.createElement("thead");
            thead.innerHTML = `
        <tr>
            <th>–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–Ω—ã–π –∫–æ–¥</th>
            <th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th>
            <th>–î–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</th>
            <th>–ì–¥–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ—Å—å</th>
            <th>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</th>
        </tr>
    `;
            table.appendChild(thead);

            const tbody = document.createElement("tbody");
            materials.forEach(material => {
                const row = document.createElement("tr");
                row.innerHTML = `
            <td>${material.nomenclature}</td>
            <td>${material.quantity} —à—Ç.</td>
            <td>${new Date(material.dateOfUse).toLocaleString()}</td>
            <td>${material.ticketNumber ? material.inventoryNumber + ' (#' + material.ticketNumber +')' : material.molName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</td>
            <td>${material.comments}</td>
        `;
                tbody.appendChild(row);
            });
            table.appendChild(tbody);

            // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            const container = document.getElementById("filteredMaterials");
            container.innerHTML = ""; // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
            container.appendChild(table);
        } catch (error) {
            document.getElementById("filteredMaterials").innerHTML = "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.";
            console.error("–û—à–∏–±–∫–∞:", error.message);
            showAlert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: " + error.message);
        }
    };

    // –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    loadMaterials();
});
